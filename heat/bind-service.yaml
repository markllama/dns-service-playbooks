heat_template_version: 2016-10-14

description:
  A self-contained rogue DNS service, but suitable for delegation
  Single master, multiple slaves, Updates enabled by key
  The instances are created with Heat and then configured with Ansible

parameters:

  image:
    description: >
      The Glance image to use as a base for DNS servers
    type: string
    constraints:
      - custom_constraint: glance.image
      
  flavor:
    description: >
      The name of the OpenStack instance flavor to use for DNS servers
    default. m1.small
    constraints:
      - custom_constraint: nova.flavor

  #
  #
  #
  
  zone_name:
    description: >
      The DNS zone to serve.  Should be delegated from the parent, but hey.
    type: string
    default: "example.com"
    
  zone_admin:
    description: >
      The email address of the zone admin user
      Use traditional at sign (@), will be converted for use in the SOA header
    type: string
    default: "admin@example.com"

  forwarders:
    description: >
      A list of host IP addresses to forward queries to.
      This allows the service to be used by hosts that do not have direct
      access to external networks
    type: comma_delmited_list
    default: []

  update_key:
    description:
      The key for DNS record updates.  A BASE64 encoded HMAC-MD5 symmetric key.
      Generated by rndc-confgen.

      Example: rndc-confgen -a -c update.key -k update-key

      No default, because default passwords are *bad*
    type: string

  master_count:
    description: The number of master servers to create
    type: number
    default: 1
    
  slave_count:
    description: The number of slave servers to create
    type: number
    default: 2
    
resources:

  masters:
    type OS::Heat::ResourceGroup
    properties:
      count: {get_param: master_count}
      resource_def:
        type: master.yaml
        properties:
          image: {get_param: image}
          flavor: {get_param: flavor}
          ssh_key_name: {get_param: ssh_key_name}
          ssh_user: {get_param: ssh_user}

          hostname:
            str_replace:
              template: "%stackname%-master-ns%index%"
              params:
                "%stackname%": {get_param: 'OS::stack_name'}

          domain_name: {get_param: "zone_name"}
          master_server_group: {get_resource: master_server_group}
          master_security_group: {get_resource: master_security_group}

  master_server_group:
    description: >
      The collection of master server resources      
    type: OS::Nova::ServerGroup
    properties:
      name: master_server_group
      policies: {get_param: master_server_group_policies}

  master_server_group_policies:
    description: >
      Server group common settings
    type: comma_delimited_list
    default: ['anti-affinity']

  master_security_group:
    description: >
      Define network access to DNS master servers
      ICMP, SSH, and DNS (TCP and UDP) allowed
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - direction: ingress
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - direction: ingress
          protocol: tcp
          port_range_min: 53
          port_range_max: 53
        - direction: ingress
          protocol: udp
          port_range_min: 53
          port_range_max: 53

  slaves:
    type OS::Heat::ResourceGroup
    properties:
      count: {get_param: slave_count}
      resource_def:
        type: slave.yaml
        properties:
          image: {get_param: image}
          flavor: {get_param: flavor}
          ssh_key_name: {get_param: ssh_key_name}
          ssh_user: {get_param: ssh_user}

          hostname:
            str_replace:
              template: "%stackname%-slave-ns%index%"
              params:
                "%stackname%": {get_param: 'OS::stack_name'}

          domain_name: {get_param: "zone_name"}
          slave_server_group: {get_resource: slave_server_group}
          slave_security_group: {get_resource: slave_security_group}

  slave_server_group:
    description: >
      The collection of slave server resources      
    type: OS::Nova::ServerGroup
    properties:
      name: slave_server_group
      policies: {get_param: slave_server_group_policies}

  slave_server_group_policies:
    description: >
      Slave server group common settings
    type: comma_delimited_list
    default: ['anti-affinity']

  slave_security_group:
    description: >
      Define network access to DNS slave servers
      ICMP, SSH, and DNS (TCP and UDP) allowed
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - direction: ingress
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - direction: ingress
          protocol: tcp
          port_range_min: 53
          port_range_max: 53
        - direction: ingress
          protocol: udp
          port_range_min: 53
          port_range_max: 53

    
outputs:
